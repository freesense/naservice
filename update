#! /usr/bin/bash

echo ----- $(date +'%Y-%m-%d %H:%M:%S') -----

# 镜像升级并重启
_update() {
	cd $1
	start=$(date +%s%N)
	need_update=1
	if [ -f ./update ]; then
		sh ./update
		need_update=$?
	fi
	if [ $need_update -eq 1 ]; then
		docker-compose pull
		docker-compose down
		docker-compose up -d
		end=$(date +%s%N)
		typeset offset=$(((end-start)/1000000))
		result=$(echo "scale=3;$offset/1000" | bc)
		echo '>>>' $1 updated in $result seconds.
	fi
	cd ..
}

# 进入脚本目录
DIR="$(dirname "${BASH_SOURCE[0]}")"
DIR="$(realpath "${DIR}")"
cd $DIR

# update docker-compose
current_version=$(docker-compose --version|awk {'print $4'})
compose_version=$(curl https://api.github.com/repos/docker/compose/releases/latest 2>/dev/null | jq .name -r)
if [ $compose_version == $current_version ]; then
	echo 当前版本$current_version为最新版，不需要升级
else
	output=$(whereis docker-compose|awk {'print $2'})
	if [ ${#output} == 0 ]; then
		output='/usr/bin/docker-compose'
	fi
	curl -L https://github.com/docker/compose/releases/download/$compose_version/docker-compose-$(uname -s|awk {'print tolower($0)'})-$(uname -m|awk {'print tolower($0)'}) -o $output 2>/dev/null
	chmod +x $output
	echo $(docker-compose --version)
fi

# 轮询子目录，寻找docker-compose文件
dirlist=`ls 2>/dev/null`
for name in ${dirlist[@]}
do
	if [ -d $name ]; then
		if [ -f $name/docker-compose.yaml ] || [ -f $name/docker-compose.yml ]; then
			_update $name
			#echo $name
		fi
	fi
done
printf 'update finished.\n\n'

# 删除过时的镜像
VVV=$(docker image ls|grep '<none>'|grep -v grep|awk {'print $3'})
if [ ${#VVV} -gt 0 ]; then
	docker rmi $VVV
	echo
fi
docker image ls
echo
